{"ast":null,"code":"var _jsxFileName = \"/home/mac-aphid/Desktop/PROJECTS/3-MONTH-CHALLANGE/Frontend/tourist-assistant-application/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_OPENAI_API_KEY;\nconst ChatBot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  // Toggle chatbot open/close\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Handle user input\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n\n  // Send message to OpenAI and get response\n  const handleSendMessage = async () => {\n    if (!userInput) return;\n    const userMessage = {\n      sender: 'user',\n      text: userInput\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: \"gpt-3.5-turbo\",\n        messages: messages.map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'assistant',\n          content: msg.text\n        }))\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        }\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: response.data.choices[0].message.content\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error communicating with OpenAI:', error);\n      const errorMessage = {\n        sender: 'bot',\n        text: 'Something went wrong. Please try again later.'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-icon\",\n      onClick: toggleChat,\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: userInput,\n          onChange: handleInputChange,\n          onKeyDown: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Butt\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBot, \"fq+VhNRB6vBk2vhHCHxICIZbt1k=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","apiKey","process","env","REACT_APP_OPENAI_API_KEY","ChatBot","_s","isOpen","setIsOpen","messages","setMessages","userInput","setUserInput","toggleChat","handleInputChange","e","target","value","handleSendMessage","userMessage","sender","text","response","post","model","map","msg","role","content","headers","botMessage","data","choices","message","prevMessages","error","console","errorMessage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","type","placeholder","onChange","onKeyDown","key","_c","$RefreshReg$"],"sources":["/home/mac-aphid/Desktop/PROJECTS/3-MONTH-CHALLANGE/Frontend/tourist-assistant-application/src/components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport '../styles/Style.css'; \nconst apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n\n\nconst ChatBot = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [messages, setMessages] = useState([]);\n    const [userInput, setUserInput] = useState('');\n\n    // Toggle chatbot open/close\n    const toggleChat = () => {\n        setIsOpen(!isOpen);\n    };\n\n    // Handle user input\n    const handleInputChange = (e) => {\n        setUserInput(e.target.value);\n    };\n\n    // Send message to OpenAI and get response\n    const handleSendMessage = async () => {\n        if (!userInput) return;\n        \n        const userMessage = { sender: 'user', text: userInput };\n        setMessages([...messages, userMessage]);\n\n        try {\n            const response = await axios.post('https://api.openai.com/v1/chat/completions', \n            {\n                model: \"gpt-3.5-turbo\",\n                messages: messages.map(msg => ({ role: msg.sender === 'user' ? 'user' : 'assistant', content: msg.text }))\n\n            }, \n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${apiKey}`\n                }\n            });\n\n            const botMessage = { sender: 'bot', text: response.data.choices[0].message.content };\n            setMessages((prevMessages) => [...prevMessages, botMessage]);\n        } catch (error) {\n            console.error('Error communicating with OpenAI:', error);\n            const errorMessage = { sender: 'bot', text: 'Something went wrong. Please try again later.' };\n            setMessages((prevMessages) => [...prevMessages, errorMessage]);\n        }\n\n        setUserInput('');\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            {/* Chatbot icon */}\n            <div className=\"chatbot-icon\" onClick={toggleChat}>\n                ðŸ’¬\n            </div>\n                    \n            {isOpen && (\n                <div className=\"chat-window\">\n                    <div className=\"chat-header\">\n                   \n                        <button onClick={toggleChat}>X</button>\n                    </div>\n\n                    <div className=\"chat-body\">\n                        {messages.map((message, index) => (\n                            <div \n                                key={index} \n                                className={`chat-message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\n                            >\n                                {message.text}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"chat-footer\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Type your message...\" \n                            value={userInput} \n                            onChange={handleInputChange} \n                            onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n                        />\n                      \n                    </div>\n                    <div className=\"Butt\">\n                    <button onClick={handleSendMessage}>Send</button></div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}